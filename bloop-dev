#!/bin/bash

set -e
DIR=$(dirname $(readlink -f $0))

cross_setup() {

	    cd /tmp/
	    wget -c https://releases.linaro.org/components/toolchain/binaries/6.5-2018.12/arm-linux-gnueabihf/gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
	    if [ $? -ne 0 ]; then
	    	echo "Failure to get arm-linux-gnueabihf"
	    fi
	    sudo tar xf gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz -C /opt/

	    rm gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf.tar.xz
}

gtest_setup() {

	sudo apt update
	sudo apt install -y libgtest-dev

	cd /usr/src/gtest
	if [ "$1" == "cross" ]; then
	    BB_TOOLCHAIN=$PWD/toolchains/beaglebone.cmake
	    mkdir ARM
	    cd ARM
	    sudo cmake -DCMAKE_TOOLCHAIN_FILE=$BB_TOOLCHAIN .. 
	    sudo make
	else
	    sudo cmake .
	    sudo make
        fi
}

picklerick() {

    cat <<'EOF'
        ___
    . -^   `--,      
   /# =========`-_   
  /# (--====___====\ 
 /#   .- --.  . --.| 
/##   |  * ) (   * ),
|##   \    /\ \   / |
|###   ---   \ ---  |
|####      ___)    #|
|######           ##|
 \##### ---------- / 
  \####           (  
   `\###          |  
     \###         |  
      \##        |   
       \###.    .)   
        `======/
EOF
}

if [ $# -eq 0 ]; then
    echo "Usage $0 {clean, build}"
    exit 1
fi


if [ "$1" == "build" ]; then
    export GLIB_PATH="libgtest.a"
    if [ ! -e '/usr/src/gtest/libgtest.a' ]; then
        $(gtest_setup)
    fi

    $0 clean
    mkdir build && cd build
    cmake ..
    make
    picklerick


elif [ "$1" == "cross" ]; then
    export GLIB_PATH="ARM/libgtest.a"
    if [ ! -d /opt/gcc-linaro-6.5.0-2018.12-x86_64_arm-linux-gnueabihf ]; then
        $(cross_setup)
    fi

    if [ ! -e '/usr/src/gtest/ARM/libgtest.a' ]; then
        $(gtest_setup cross)
    fi

    $0 clean
    mkdir build && cd build
    cmake -DCMAKE_TOOLCHAIN_FILE=./toolchains/beaglebone.cmake ..
    make
    picklerick


elif [ "$1" == "clean" ]; then
	rm -rf build
	rm -rf out
	rm -rf coverage
	echo "clean finished"
fi
